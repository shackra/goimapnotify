# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.9)
{

  # Flake inputs
  inputs = {
    pre-commit-hooks.url = "github:cachix/pre-commit-hooks.nix";

    flake-schemas.url =
      "https://flakehub.com/f/DeterminateSystems/flake-schemas/*.tar.gz";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/0.2311.*.tar.gz";
  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs, pre-commit-hooks }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems =
        [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f:
        nixpkgs.lib.genAttrs supportedSystems (system:
          f {
            pkgs = import nixpkgs { inherit system; };
            inherit system;
          });
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      checks = forEachSupportedSystem ({ system, ... }: {
        pre-commit-check = pre-commit-hooks.lib.${system}.run {
          src = ./.;
          hooks = {
            nixpkgs-fmt.enable = true;

            shellcheck.enable = true;

            golangci-lint.enable = true;
            gotest.enable = true;
            gofmt.enable = true; # TODO: switch to `gofumpt`
          };
        };
      });

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs, system }: {
        default = pkgs.mkShell {
          # Environment variables
          env = { CGO_CFLAGS = "-O2 -g -Wno-error"; };
          # Pinned packages available in the environment
          packages = with pkgs; [
            nixpkgs-fmt

            go
            gopls
            golines
            golangci-lint
            golangci-lint-langserver
            gomodifytags
            delve
            gdlv

            nodePackages_latest.bash-language-server

            git-chglog
          ];
          inherit (self.checks.${system}.pre-commit-check) shellHook;
        };
      });
    };
}
